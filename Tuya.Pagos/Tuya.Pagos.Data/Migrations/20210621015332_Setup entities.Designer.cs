// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tuya.Pagos.Data.Context;

namespace Tuya.Pagos.Data.Migrations
{
    [DbContext(typeof(PagosContext))]
    [Migration("20210621015332_Setup entities")]
    partial class Setupentities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tuya.Pagos.Domain.Entities.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TipoEvento")
                        .HasColumnType("int");

                    b.Property<int>("TransaccionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TransaccionId");

                    b.ToTable("Tbl_Eventos");
                });

            modelBuilder.Entity("Tuya.Pagos.Domain.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreProducto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NombreProducto");

                    b.Property<float>("Precio")
                        .HasColumnType("real")
                        .HasColumnName("Precio");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Productos");
                });

            modelBuilder.Entity("Tuya.Pagos.Domain.Entities.Transaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha");

                    b.Property<float>("Total")
                        .HasColumnType("real")
                        .HasColumnName("Total");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Tbl_Transacciones");
                });

            modelBuilder.Entity("Tuya.Pagos.Domain.Entities.TransaccionDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("TransaccionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("TransaccionId");

                    b.ToTable("Tbl_TxDetalles");
                });

            modelBuilder.Entity("Tuya.Pagos.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Apellidos");

                    b.Property<int>("Cedula")
                        .HasColumnType("int")
                        .HasColumnName("Cedula");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Direccion");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nombres");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Usuarios");
                });

            modelBuilder.Entity("Tuya.Pagos.Domain.Entities.Evento", b =>
                {
                    b.HasOne("Tuya.Pagos.Domain.Entities.Transaccion", "Transaccion")
                        .WithMany("Eventos")
                        .HasForeignKey("TransaccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaccion");
                });

            modelBuilder.Entity("Tuya.Pagos.Domain.Entities.Transaccion", b =>
                {
                    b.HasOne("Tuya.Pagos.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Transacciones")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Tuya.Pagos.Domain.Entities.TransaccionDetalle", b =>
                {
                    b.HasOne("Tuya.Pagos.Domain.Entities.Producto", "Producto")
                        .WithMany("TransaccionDetalles")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tuya.Pagos.Domain.Entities.Transaccion", "Transaccion")
                        .WithMany("TransaccionDetalles")
                        .HasForeignKey("TransaccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Transaccion");
                });

            modelBuilder.Entity("Tuya.Pagos.Domain.Entities.Producto", b =>
                {
                    b.Navigation("TransaccionDetalles");
                });

            modelBuilder.Entity("Tuya.Pagos.Domain.Entities.Transaccion", b =>
                {
                    b.Navigation("Eventos");

                    b.Navigation("TransaccionDetalles");
                });

            modelBuilder.Entity("Tuya.Pagos.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Transacciones");
                });
#pragma warning restore 612, 618
        }
    }
}
